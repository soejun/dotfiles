# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands


# JankyBorders has a built-in detection of already running process,
# so it won't be run twice on AeroSpace restart
after-startup-command = [
  'exec-and-forget borders active_color=0xff8ec07c inactive_color=0x00000000 width=2.0 style=round hidpi=on order=above',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20
# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = "move-mouse window-lazy-center"

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors

[workspace-to-monitor-force-assignment]
# https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
# Left hand side of the assignment is the workspace name
# Right hand side of the assignment is the monitor pattern
# Supported monitor patterns:
# main - "Main" monitor ("main" as in System Settings → Displays → Use as)
# secondary - Non-main monitor in case when there are only two monitors
# <number> (e.g. 1, 2) - Sequence number of the monitor from left to right. 1-based indexing
# <regex-pattern> (e.g. dell.*, built-in.*) - Case insensitive regex substring pattern
# You can specify multiple patterns as an array. The first matching pattern will be used
# move-workspace-to-monitor command has no effect for workspaces that have monitor assignment

# Example
# [workspace-to-monitor-force-assignment]
# 1 = 1                            # Monitor sequence number from left to right. 1-based indexing
# 2 = 'main'                       # Main monitor
# 3 = 'secondary'                  # Non-main monitor in case when there are only two monitors
# 4 = 'built-in'                   # Case insensitive regex substring
# 5 = '^built-in retina display$'  # Case insensitive regex match
# 6 = ['secondary', 'dell']        # You can specify multiple patterns. The first matching pattern will be used

1 = ['main', '^built-in retina display$']
2 = ['main', '^built-in retina display$']
3 = ['main', '^built-in retina display$']
4 = ['main', '^built-in retina display$']
5 = ['main', '^built-in retina display$']
6 = ['main', '^built-in retina display$']
7 = ['secondary', 'main', '^built-in retina display$']
8 = ['secondary', 'main', '^built-in retina display$']
9 = ['secondary', 'main', '^built-in retina display$']
10 = ['secondary', 'main', '^built-in retina display$']

[gaps]
inner.horizontal = 8
inner.vertical = 8
outer.left = 8
outer.bottom = 8
outer.top = 8
outer.right = 8

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout

# Reload Config
alt-shift-c = 'reload-config'

## Layout Bindings

# Ooooh, we want to use this one typically, this is the tiling we want
# cmd-slash = 'layout tiles horizontal vertical'
# Good for if we wanna rapidly swap between stuff but on the same space
# cmd-comma = 'layout accordion horizontal vertical'

# Consider using 'join-with' command as a 'split' replacement if you want to enable normalizations
# We never really used the split in sway anyways

# alt-h = 'split horizontal'
# alt-v = 'split vertical'
alt-f = 'fullscreen'

alt-s = 'layout v_accordion'               # 'layout stacking' in i3 - sway
alt-w = 'layout h_accordion'               # 'layout tabbed' in i3 - sway
alt-e = 'layout tiles horizontal vertical' # 'layout toggle split' in i3 - sway
alt-shift-space = 'layout floating tiling' # 'floating toggle' in i3 - sway


# Moving; See: https://nikitabobko.github.io/AeroSpace/commands#focus

alt-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
alt-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
alt-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
alt-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'
# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-shift-h = ['join-with left', 'mode main']
cmd-shift-j = ['join-with down', 'mode main']
cmd-shift-k = ['join-with up', 'mode main']
cmd-shift-l = ['join-with right', 'mode main']

# TODO: use-trackpad-gestures-to-switch-workspaces
# See: https://nikitabobko.github.io/AeroSpace/goodness

# TODO: Assign Workspace to Monitor where applicable

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
ctrl-1 = 'workspace 1'
ctrl-2 = 'workspace 2'
ctrl-3 = 'workspace 3'
ctrl-4 = 'workspace 4'
ctrl-5 = 'workspace 5'
ctrl-6 = 'workspace 6'
ctrl-7 = 'workspace 7'
ctrl-8 = 'workspace 8'
ctrl-9 = 'workspace 9'
ctrl-0 = 'workspace 10'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-shift-1 = 'move-node-to-workspace 1'
ctrl-shift-2 = 'move-node-to-workspace 2'
ctrl-shift-3 = 'move-node-to-workspace 3'
ctrl-shift-4 = 'move-node-to-workspace 4'
ctrl-shift-5 = 'move-node-to-workspace 5'
ctrl-shift-6 = 'move-node-to-workspace 6'
ctrl-shift-7 = 'move-node-to-workspace 7'
ctrl-shift-8 = 'move-node-to-workspace 8'
ctrl-shift-9 = 'move-node-to-workspace 9'
ctrl-shift-0 = 'move-node-to-workspace 10'

alt-tab = 'workspace-back-and-forth'
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'


# resizing in normal
alt-ctrl-h = 'resize width -50'
alt-ctrl-j = 'resize height +50'
alt-ctrl-k = 'resize height -50'
alt-ctrl-l = 'resize width +50'
alt-ctrl-b = 'balance-sizes'

# ctrl-g = '''exec-and-forget osascript -e '
# tell application "Safari"
#     make new document at end of documents
#     activate
# end tell'
# '''
#
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-r = 'mode resize'
[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'
minus = 'resize smart -50'
equal = 'resize smart +50'

enter = 'mode main'
esc = 'mode main'

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = 'move-node-to-workspace 10'

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'move-node-to-workspace 10'

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = 'move-node-to-workspace 10'

[[on-window-detected]]
if.app-id = 'com.arobas-music.guitarpro8'
if.app-name-regex-substring = 'guitarpro'
run = 'move-node-to-workspace 4'

[[on-window-detected]]
if.app-id = 'com.valvesoftware.steam'
run = ['layout tiling', 'move-node-to-workspace 8']

